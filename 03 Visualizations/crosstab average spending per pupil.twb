<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
        <calculation class='tableau' formula='7151.6706223441297' />
        <range max='19083.970000000001' min='7151.6706223441297' />
      </column>
      <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
        <calculation class='tableau' formula='19083.970000000001' />
        <range max='31016.279999999999' min='19083.970000000001' />
      </column>
      <column caption='KPI High SPC' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='31016.279999999999'>
        <calculation class='tableau' formula='31016.279999999999' />
        <range max='42948.578167415777' min='31016.279999999999' />
      </column>
      <column caption='Above Median Spending' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12050.0'>
        <calculation class='tableau' formula='12050.0' />
        <range max='42948.578167415777' min='12050.0' />
      </column>
    </datasource>
    <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' inline='true' name='federated.1rxlp9619ie7h91aolobb0xae00x' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='webdata-direct.1qa7sxu1has49g1g01czw11b21e4'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;chriscrider/s-17-dv-final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmRpbmciLCJpc3MiOiJhZ2VudDpkaW5nOjowNzc0NDIzMC0wMmEzLTQ1NzctYTQ0MC04MGZmNGViY2EyN2MiLCJpYXQiOjE0OTI0NTk4MzgsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.wdgFKQGqUa926FKYSlsLE1ic3h3y4UffynxUbzo-1tbHWiUEURKv4HK_MPkPuIfTEVJMbVkghZ-2Kf5hSBYpMw&quot;}' connectionName='&quot;chriscrider/s-17-dv-final-project&quot;' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[SchoolSpending].[v_0]' />
              <expression op='[PopulationandElementaryEnrollment].[v_0]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Pupil_Per_Spending].[v_0]' />
                <expression op='[SchoolSpending].[v_0]' />
              </expression>
            </clause>
            <relation connection='webdata-direct.1qa7sxu1has49g1g01czw11b21e4' name='Pupil_Per_Spending' table='[PupilPerSpending]' type='table' />
            <relation connection='webdata-direct.1qa7sxu1has49g1g01czw11b21e4' name='SchoolSpending' table='[SchoolSpending]' type='table' />
          </relation>
          <relation connection='webdata-direct.1qa7sxu1has49g1g01czw11b21e4' name='PopulationandElementaryEnrollment' table='[PopulationandElementaryEnrollment]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (PopulationandElementaryEnrollment)]' value='[PopulationandElementaryEnrollment].[v_0]' />
          <map key='[v_0 (SchoolSpending)]' value='[SchoolSpending].[v_0]' />
          <map key='[v_0]' value='[Pupil_Per_Spending].[v_0]' />
          <map key='[v_1 (PopulationandElementaryEnrollment)]' value='[PopulationandElementaryEnrollment].[v_1]' />
          <map key='[v_1 (SchoolSpending)]' value='[SchoolSpending].[v_1]' />
          <map key='[v_10]' value='[Pupil_Per_Spending].[v_10]' />
          <map key='[v_11]' value='[Pupil_Per_Spending].[v_11]' />
          <map key='[v_1]' value='[Pupil_Per_Spending].[v_1]' />
          <map key='[v_2 (PopulationandElementaryEnrollment)]' value='[PopulationandElementaryEnrollment].[v_2]' />
          <map key='[v_2 (SchoolSpending)]' value='[SchoolSpending].[v_2]' />
          <map key='[v_2]' value='[Pupil_Per_Spending].[v_2]' />
          <map key='[v_3 (SchoolSpending)]' value='[SchoolSpending].[v_3]' />
          <map key='[v_3]' value='[Pupil_Per_Spending].[v_3]' />
          <map key='[v_4 (SchoolSpending)]' value='[SchoolSpending].[v_4]' />
          <map key='[v_4]' value='[Pupil_Per_Spending].[v_4]' />
          <map key='[v_5 (SchoolSpending)]' value='[SchoolSpending].[v_5]' />
          <map key='[v_5]' value='[Pupil_Per_Spending].[v_5]' />
          <map key='[v_6 (SchoolSpending)]' value='[SchoolSpending].[v_6]' />
          <map key='[v_6]' value='[Pupil_Per_Spending].[v_6]' />
          <map key='[v_7 (SchoolSpending)]' value='[SchoolSpending].[v_7]' />
          <map key='[v_7]' value='[Pupil_Per_Spending].[v_7]' />
          <map key='[v_8 (SchoolSpending)]' value='[SchoolSpending].[v_8]' />
          <map key='[v_8]' value='[Pupil_Per_Spending].[v_8]' />
          <map key='[v_9]' value='[Pupil_Per_Spending].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>Geographic area</remote-alias>
            <ordinal>0</ordinal>
            <caption>Geographic area</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2014 PPCS</remote-alias>
            <ordinal>1</ordinal>
            <caption>2014 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(13-14) Percentage change1</remote-alias>
            <ordinal>2</ordinal>
            <caption>(13-14) Percentage change1</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2013 PPCS</remote-alias>
            <ordinal>3</ordinal>
            <caption>2013 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(12-13) Percentage change1</remote-alias>
            <ordinal>4</ordinal>
            <caption>(12-13) Percentage change1</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2012 PPCS</remote-alias>
            <ordinal>5</ordinal>
            <caption>2012 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(11-12) Percentage change1</remote-alias>
            <ordinal>6</ordinal>
            <caption>(11-12) Percentage change1</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2011 PPCS</remote-alias>
            <ordinal>7</ordinal>
            <caption>2011 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(10 -11) Percentage change1</remote-alias>
            <ordinal>8</ordinal>
            <caption>(10 -11) Percentage change1</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2010 PPCS</remote-alias>
            <ordinal>9</ordinal>
            <caption>2010 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(09-10) Percentage change1</remote-alias>
            <ordinal>10</ordinal>
            <caption>(09-10) Percentage change1</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2009 PPCS</remote-alias>
            <ordinal>11</ordinal>
            <caption>2009 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Geographical Area</remote-alias>
            <ordinal>12</ordinal>
            <caption>Geographical Area</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Total Revenue (in thousands)</remote-alias>
            <ordinal>13</ordinal>
            <caption>Total Revenue (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_2 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>From Federal Sources (in thousands)</remote-alias>
            <ordinal>14</ordinal>
            <caption>From Federal Sources (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>From State Sources (in thousands)</remote-alias>
            <ordinal>15</ordinal>
            <caption>From State Sources (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>From Local Sources (in thousands)</remote-alias>
            <ordinal>16</ordinal>
            <caption>From Local Sources (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Total Spending (in thousands)</remote-alias>
            <ordinal>17</ordinal>
            <caption>Total Spending (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_6 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Current Spending (in thousands)</remote-alias>
            <ordinal>18</ordinal>
            <caption>Current Spending (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Capital Outlay (in thousands)</remote-alias>
            <ordinal>19</ordinal>
            <caption>Capital Outlay (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Other (in thousands)</remote-alias>
            <ordinal>20</ordinal>
            <caption>Other (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (PopulationandElementaryEnrollment)]</local-name>
            <parent-name>[PopulationandElementaryEnrollment]</parent-name>
            <remote-alias>Geographic area</remote-alias>
            <ordinal>21</ordinal>
            <caption>Geographic area</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1 (PopulationandElementaryEnrollment)]</local-name>
            <parent-name>[PopulationandElementaryEnrollment]</parent-name>
            <remote-alias>State population (in thousands)</remote-alias>
            <ordinal>22</ordinal>
            <caption>State population (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_2 (PopulationandElementaryEnrollment)]</local-name>
            <parent-name>[PopulationandElementaryEnrollment]</parent-name>
            <remote-alias>Elementary-secondary enrollment</remote-alias>
            <ordinal>23</ordinal>
            <caption>Elementary-secondary enrollment</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
      </column>
      <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
      </column>
      <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
      </column>
      <column caption='Capital Outlay per Child' datatype='real' name='[Calculation_68679894965772290]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_7 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
      </column>
      <column caption='Total Revenue per Child' datatype='real' name='[Calculation_68679894966149123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_1 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
      <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Geographic area' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='State population (in thousands)' datatype='integer' name='[v_1 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
      <column caption='Total Revenue (in thousands)' datatype='integer' name='[v_1 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='(09-10) Percentage change1' datatype='real' name='[v_10]' role='measure' type='quantitative' />
      <column caption='2009 PPCS' datatype='integer' name='[v_11]' role='measure' type='quantitative' />
      <column caption='2014 PPCS' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
      <column caption='From Federal Sources (in thousands)' datatype='integer' name='[v_2 (SchoolSpending)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='(13-14) Percentage change1' datatype='string' default-role='measure' default-type='quantitative' name='[v_2]' role='dimension' type='nominal' />
      <column caption='From State Sources (in thousands)' datatype='integer' name='[v_3 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='2013 PPCS' datatype='integer' name='[v_3]' role='measure' type='quantitative' />
      <column caption='From Local Sources (in thousands)' datatype='integer' name='[v_4 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='(12-13) Percentage change1' datatype='real' name='[v_4]' role='measure' type='quantitative' />
      <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='2012 PPCS' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Current Spending (in thousands)' datatype='integer' name='[v_6 (SchoolSpending)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='(11-12) Percentage change1' datatype='string' default-role='measure' default-type='quantitative' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Capital Outlay (in thousands)' datatype='integer' name='[v_7 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='2011 PPCS' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='Other (in thousands)' datatype='integer' name='[v_8 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='(10 -11) Percentage change1' datatype='real' name='[v_8]' role='measure' type='quantitative' />
      <column caption='2010 PPCS' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='Attribute' name='[attr:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
      <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_68679894966149123]' derivation='Sum' name='[sum:Calculation_68679894966149123:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1 (PopulationandElementaryEnrollment)]' derivation='Sum' name='[sum:v_1 (PopulationandElementaryEnrollment):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1 (SchoolSpending)]' derivation='Sum' name='[sum:v_1 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1]' derivation='Sum' name='[sum:v_1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_3]' derivation='Sum' name='[sum:v_3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_5 (SchoolSpending)]' derivation='Sum' name='[sum:v_5 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_6 (SchoolSpending)]' derivation='Sum' name='[sum:v_6 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7 (SchoolSpending)]' derivation='Sum' name='[sum:v_7 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\dingk\Documents\My Tableau Repository\Datasources\federated.1rxlp9619ie7h91aolobb0xae00x_1ig5cqs0k7wfjx17p90wj0qcwmg5.tde' schema='Extract' tablename='Extract' update-time='04/28/2017 02:54:30 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_433189989801832448]' value='[Extract].[Calculation_433189989801832448]' />
            <map key='[v_0 (PopulationandElementaryEnrollment)]' value='[Extract].[v_0]' />
            <map key='[v_0 (SchoolSpending)]' value='[Extract].[v_01]' />
            <map key='[v_0]' value='[Extract].[v_02]' />
            <map key='[v_1 (PopulationandElementaryEnrollment)]' value='[Extract].[v_1]' />
            <map key='[v_1 (SchoolSpending)]' value='[Extract].[v_11]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_111]' />
            <map key='[v_1]' value='[Extract].[v_12]' />
            <map key='[v_2 (PopulationandElementaryEnrollment)]' value='[Extract].[v_2]' />
            <map key='[v_2 (SchoolSpending)]' value='[Extract].[v_21]' />
            <map key='[v_2]' value='[Extract].[v_22]' />
            <map key='[v_3 (SchoolSpending)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (SchoolSpending)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5 (SchoolSpending)]' value='[Extract].[v_5]' />
            <map key='[v_5]' value='[Extract].[v_51]' />
            <map key='[v_6 (SchoolSpending)]' value='[Extract].[v_6]' />
            <map key='[v_6]' value='[Extract].[v_61]' />
            <map key='[v_7 (SchoolSpending)]' value='[Extract].[v_7]' />
            <map key='[v_7]' value='[Extract].[v_71]' />
            <map key='[v_8 (SchoolSpending)]' value='[Extract].[v_8]' />
            <map key='[v_8]' value='[Extract].[v_81]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_433189989801832448]' formula='' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='52' timestamp-start='2017-04-28 02:54:30.060' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (PopulationandElementaryEnrollment)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>PopulationandElementaryEnrollment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>SchoolSpending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_02</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_02</remote-alias>
              <ordinal>2</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_1 (PopulationandElementaryEnrollment)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>3</ordinal>
              <family>PopulationandElementaryEnrollment</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>637713000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12263711.538461538</statistic>
                <statistic aggregation='Min' datatype='integer'>584000</statistic>
                <statistic aggregation='Max' datatype='integer'>318857000</statistic>
                <statistic aggregation='Stdev' datatype='real'>43920640.145133302</statistic>
                <statistic aggregation='StdevP' datatype='real'>43496276.182050936</statistic>
                <statistic aggregation='Var' datatype='real'>1929022630758295.2</statistic>
                <statistic aggregation='VarP' datatype='real'>1891926041705251.3</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.06200882445e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_1 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1235267546.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23755145.115384616</statistic>
                <statistic aggregation='Min' datatype='integer'>1342220</statistic>
                <statistic aggregation='Max' datatype='integer'>617633773</statistic>
                <statistic aggregation='Stdev' datatype='real'>85200486.714524791</statistic>
                <statistic aggregation='StdevP' datatype='real'>84377274.300515175</statistic>
                <statistic aggregation='Var' datatype='real'>7259122936391916.0</statistic>
                <statistic aggregation='VarP' datatype='real'>7119524418384379.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.9955922956754272e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>5</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>76.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.4615384615384615</statistic>
                <statistic aggregation='Min' datatype='real'>-5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>13.800000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.6880917987678621</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.652457225893583</statistic>
                <statistic aggregation='Var' datatype='real'>13.602021116138763</statistic>
                <statistic aggregation='VarP' datatype='real'>13.340443786982247</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>804.77999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_111</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_111</remote-alias>
              <ordinal>6</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>558876.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10747.615384615385</statistic>
                <statistic aggregation='Min' datatype='integer'>6356</statistic>
                <statistic aggregation='Max' datatype='integer'>18126</statistic>
                <statistic aggregation='Stdev' datatype='real'>2612.2993789473803</statistic>
                <statistic aggregation='StdevP' datatype='real'>2587.0591794979973</statistic>
                <statistic aggregation='Var' datatype='real'>6824108.0452488689</statistic>
                <statistic aggregation='VarP' datatype='real'>6692875.1982248519</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6354613806.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>7</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>598427.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11508.211538461539</statistic>
                <statistic aggregation='Min' datatype='integer'>6500</statistic>
                <statistic aggregation='Max' datatype='integer'>20610</statistic>
                <statistic aggregation='Stdev' datatype='real'>3292.7646250442326</statistic>
                <statistic aggregation='StdevP' datatype='real'>3260.9497279670536</statistic>
                <statistic aggregation='Var' datatype='real'>10842298.875942685</statistic>
                <statistic aggregation='VarP' datatype='real'>10633793.128328402</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7439781749.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_2 (PopulationandElementaryEnrollment)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>8</ordinal>
              <family>PopulationandElementaryEnrollment</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>96698502.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1859586.576923077</statistic>
                <statistic aggregation='Min' datatype='integer'>44942</statistic>
                <statistic aggregation='Max' datatype='integer'>48349251</statistic>
                <statistic aggregation='Stdev' datatype='real'>6669343.2085468462</statistic>
                <statistic aggregation='StdevP' datatype='real'>6604903.5987009257</statistic>
                <statistic aggregation='Var' datatype='real'>44480138833389.937</statistic>
                <statistic aggregation='VarP' datatype='real'>43624751548132.437</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2448306316830656.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_2 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>9</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>105764166.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2033926.2692307692</statistic>
                <statistic aggregation='Min' datatype='integer'>102434</statistic>
                <statistic aggregation='Max' datatype='integer'>52882083</statistic>
                <statistic aggregation='Stdev' datatype='real'>7310711.3337628553</statistic>
                <statistic aggregation='StdevP' datatype='real'>7240074.785108394</statistic>
                <statistic aggregation='Var' datatype='real'>53446500205608.672</statistic>
                <statistic aggregation='VarP' datatype='real'>52418682893962.352</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2940888026056726.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>10</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-0.2&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8.0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>11</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>577168890.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11099401.73076923</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>288584445</statistic>
                <statistic aggregation='Stdev' datatype='real'>39787451.58982753</statistic>
                <statistic aggregation='StdevP' datatype='real'>39403022.752228312</statistic>
                <statistic aggregation='Var' datatype='real'>1583041304012869.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1552598202012622.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>87141335881268496.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>12</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>584516.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11240.692307692309</statistic>
                <statistic aggregation='Min' datatype='integer'>6555</statistic>
                <statistic aggregation='Max' datatype='integer'>19818</statistic>
                <statistic aggregation='Stdev' datatype='real'>3249.4439496474552</statistic>
                <statistic aggregation='StdevP' datatype='real'>3218.0476196365585</statistic>
                <statistic aggregation='Var' datatype='real'>10558885.981900452</statistic>
                <statistic aggregation='VarP' datatype='real'>10355830.48224852</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7108867690.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>552334490.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10621817.115384616</statistic>
                <statistic aggregation='Min' datatype='integer'>55076</statistic>
                <statistic aggregation='Max' datatype='integer'>276167245</statistic>
                <statistic aggregation='Stdev' datatype='real'>38188455.429912172</statistic>
                <statistic aggregation='StdevP' datatype='real'>37819476.192891017</statistic>
                <statistic aggregation='Var' datatype='real'>1458358128122388.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1430312779504650.2</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>80243060473541040.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>14</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>63.999999999999986</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2307692307692304</statistic>
                <statistic aggregation='Min' datatype='real'>-7.7999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>9.1999999999999993</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.5740437753593204</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.549173203936649</statistic>
                <statistic aggregation='Var' datatype='real'>6.6257013574660633</statistic>
                <statistic aggregation='VarP' datatype='real'>6.4982840236686394</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>416.67999999999995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>15</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1227275916.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23601459.923076924</statistic>
                <statistic aggregation='Min' datatype='integer'>1313289</statistic>
                <statistic aggregation='Max' datatype='integer'>613637958</statistic>
                <statistic aggregation='Stdev' datatype='real'>84668569.991881862</statistic>
                <statistic aggregation='StdevP' datatype='real'>83850496.990405947</statistic>
                <statistic aggregation='Var' datatype='real'>7168766744470197.0</statistic>
                <statistic aggregation='VarP' datatype='real'>7030905845538078.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.9457260731401158e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_51</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_51</remote-alias>
              <ordinal>16</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>576408.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11084.76923076923</statistic>
                <statistic aggregation='Min' datatype='integer'>6206</statistic>
                <statistic aggregation='Max' datatype='integer'>19552</statistic>
                <statistic aggregation='Stdev' datatype='real'>3077.815080733661</statistic>
                <statistic aggregation='StdevP' datatype='real'>3048.0770395535042</statistic>
                <statistic aggregation='Var' datatype='real'>9472945.6711915527</statistic>
                <statistic aggregation='VarP' datatype='real'>9290773.6390532553</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6872469892.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_6 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>17</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1093335528.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21025683.230769232</statistic>
                <statistic aggregation='Min' datatype='integer'>913724</statistic>
                <statistic aggregation='Max' datatype='integer'>546667764</statistic>
                <statistic aggregation='Stdev' datatype='real'>75407646.013936505</statistic>
                <statistic aggregation='StdevP' datatype='real'>74679052.637258843</statistic>
                <statistic aggregation='Var' datatype='real'>5686313077363154.0</statistic>
                <statistic aggregation='VarP' datatype='real'>5576960902798478.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.1299009342219469e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_61</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_61</remote-alias>
              <ordinal>18</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-0.1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9.3&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;0.4&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_7 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>19</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95116218.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1829158.0384615385</statistic>
                <statistic aggregation='Min' datatype='integer'>37897</statistic>
                <statistic aggregation='Max' datatype='integer'>47558109</statistic>
                <statistic aggregation='Stdev' datatype='real'>6578185.1668376215</statistic>
                <statistic aggregation='StdevP' datatype='real'>6514626.3316734629</statistic>
                <statistic aggregation='Var' datatype='real'>43272520089202.508</statistic>
                <statistic aggregation='VarP' datatype='real'>42440356241333.234</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2380881119292088.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_71</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_71</remote-alias>
              <ordinal>20</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>573483.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11028.51923076923</statistic>
                <statistic aggregation='Min' datatype='integer'>6212</statistic>
                <statistic aggregation='Max' datatype='integer'>19076</statistic>
                <statistic aggregation='Stdev' datatype='real'>2953.3742981073301</statistic>
                <statistic aggregation='StdevP' datatype='real'>2924.8386115265116</statistic>
                <statistic aggregation='Var' datatype='real'>8722419.7447209656</statistic>
                <statistic aggregation='VarP' datatype='real'>8554680.9034763314</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6769511701.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>21</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38824170.0</statistic>
                <statistic aggregation='Avg' datatype='real'>746618.65384615387</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>19412085</statistic>
                <statistic aggregation='Stdev' datatype='real'>2729074.5032866383</statistic>
                <statistic aggregation='StdevP' datatype='real'>2702706.0153061617</statistic>
                <statistic aggregation='Var' datatype='real'>7447847644489.2109</statistic>
                <statistic aggregation='VarP' datatype='real'>7304619805172.1113</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>408827079411044.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_81</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_81</remote-alias>
              <ordinal>22</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>33.899999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65192307692307694</statistic>
                <statistic aggregation='Min' datatype='real'>-5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>6.7999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6729942368148207</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.6471675998650226</statistic>
                <statistic aggregation='Var' datatype='real'>7.1448981900452466</statistic>
                <statistic aggregation='VarP' datatype='real'>7.007496301775145</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>386.48999999999984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>23</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>568255.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10927.98076923077</statistic>
                <statistic aggregation='Min' datatype='integer'>6064</statistic>
                <statistic aggregation='Max' datatype='integer'>18667</statistic>
                <statistic aggregation='Stdev' datatype='real'>2803.5259276621478</statistic>
                <statistic aggregation='StdevP' datatype='real'>2776.4380853780749</statistic>
                <statistic aggregation='Var' datatype='real'>7859757.6270739064</statistic>
                <statistic aggregation='VarP' datatype='real'>7708608.4419378694</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6610727351.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_433189989801832448</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_433189989801832448]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_433189989801832448</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.43956' measure-ordering='alphabetic' measure-percentage='0.375824' parameter-percentage='0.184615' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_7 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_1 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[attr:v_0 (PopulationandElementaryEnrollment):nk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_7:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894966149123:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_1 (PopulationandElementaryEnrollment):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_6 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894966149123:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_1:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_3:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:v_0:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
          <calculation class='tableau' formula='7151.6706223441297' />
          <range max='19083.970000000001' min='7151.6706223441297' />
        </column>
        <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
          <calculation class='tableau' formula='19083.970000000001' />
          <range max='31016.279999999999' min='19083.970000000001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Boxplot Revenue Per Child'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Total Revenue per Child' datatype='real' name='[Calculation_68679894966149123]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_1 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='None' name='[none:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_68679894966149123]' derivation='Sum' name='[sum:Calculation_68679894966149123:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
            <column caption='Geographic area' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='Total Revenue (in thousands)' datatype='integer' name='[v_1 (SchoolSpending)]' role='measure' type='quantitative' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894966149123:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0:nk]' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</column>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]' />
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' />
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='CrossTab Above Average Spending'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_5 (SchoolSpending)]' derivation='Sum' name='[sum:v_5 (SchoolSpending):qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (SchoolSpending):nk]' />
              <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' included-values='all' />
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map Sets and Parameters'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Texas&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]' field-type='quantitative' max='-7196885.8481834745' min='-13968135.908739274' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]' field-type='quantitative' max='6706802.3028693926' min='2865717.0585594' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' field-type='quantitative' max-size='1' min-size='0.0111322' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' />
              <size column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.8982962965965271' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Median Spending Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Texas&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]' field-type='quantitative' max='-7196885.8481834745' min='-13968135.908739274' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]' field-type='quantitative' max='6706802.3028693926' min='2865717.0585594' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' field-type='quantitative' max-size='1' min-size='0.0111322' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' />
              <size column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.8982962965965271' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Parameters, Hierarchy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (SchoolSpending):nk]' />
              <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='None' name='[none:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
            <column caption='Geographic area' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]'>
            <groupfilter from='&quot;High&quot;' function='range' level='[none:Calculation_350717821844422656:nk]' to='&quot;Medium&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0:nk]' to='&quot;Texas&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:v_0:nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</column>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_gray60' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]' />
              <lod column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]' />
            </encodings>
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='None' name='[none:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5 (SchoolSpending)]' derivation='Sum' name='[sum:v_5 (SchoolSpending):qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (PopulationandElementaryEnrollment):nk]' />
              <groupfilter function='member' level='[none:v_0 (PopulationandElementaryEnrollment):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Spending Per Child'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (SchoolSpending):nk]' />
              <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 6' w='42000' x='0' y='0' />
              <zone h='100000' id='3' name='Boxplot Revenue Per Child' w='42000' x='42000' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='5' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='3250' id='7' name='Boxplot Revenue Per Child' pane-specification-id='8' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Spending Per Child'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CrossTab Above Average Spending'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Parameters, Hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Sets and Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[attr:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Median Spending Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[attr:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot Revenue Per Child'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]&#10;[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_3:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Boxplot Revenue Per Child'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot Revenue Per Child' width='124'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CrossTab Above Average Spending' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Sets and Parameters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Spending Map' width='192'>
      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
      bhT5/wF3B3v8J3VGdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Parameters, Hierarchy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='124'>
      iVBORw0KGgoAAAANSUhEUgAAAHwAAADACAYAAADGFgewAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJ4klEQVR4nO3df1DT9x3H8ZcGFASGCmcwehwnOETPHpqVuflrA9ddOajzvN02W3GdHDl/
      DL157dZTB9VV5Vp3N+/sLVzRDa09nEwmLrY7ddoypx4BdrXFHwSpxUgsEeVHAoFvP/sDEr4J
      EbCXkG94vx//+f2R79d7ku83kOTzmSCEEGBkTAz0CbCxxcGJ4eDEcHBiODgxHJwYDk4MB/dg
      s9kCfQp+xcGJ4eDEcHBiQgJ9As/GDMPeP+Af0osoKMyGZmCpsViHYqNss5lZA+vNqCw2Qps3
      uK3ZsA8fhORi+wszoBrjs1eCoAreWfU3GJ/7MVJr5UstsLSmYZN+I1JH2F9qrsRf6r8L3Y7+
      2E97gdbR0eGjM1ae4AneeR3HriTg1R2zYag1y1ZYYQ2ZMWJsSM0wlDZhRf6vETOwaMqUKUM2
      s9lsiIqK8tFJK0+Q3MMlfH76PGLWZmG253XY/giPpmpcl+yn7d989igaV7yKZZH+O8tgEBTP
      cMlUjnOTf4btiV7uuu3taDceg04HAKGIiF+INRtysdz5k2E+izd1Z4FZL+HN3xOvDQBC8e6L
      M++Uis/6nP+uFvqCM+K+t0377OKrGxWiaOf74qZzX/0ZcV/0iYayXaLofOuIR+vq6vLViSuS
      8p/hdedw7vZ1SJur3BYbdUZkFRQiW34tV4UhdsFqZMTvhckCJKtdK5C4VoeUIj0qk3+L7CH3
      BUIC/RP37Nyf4fc//LM48t8vRKdDCCEcwnqjTOzZdUrc7V878Awf0HFNvLunTDT0DXlQF36G
      K5wmfTVSjpdg9/F76OpVIWzW83g5PwcJ3jaOTMP6zDq8XWLEa3laULyjTxCCP8QoZ7PZvP66
      Nl4Eya9lzFc4ODEcnBgOTgwHJ4aDE8PBiQn6P7wEMyEELtY0oa6hBalJcUhfnIAJEyb49Zj8
      hxcPY/WHFyEE9pZ+AuOtwff2tcka7M5Z7tfofEkPkIs1TW6xAcB4y4yLtU1+PS4HD5C6hhbv
      y+94X+4rHJwYDh4gqUlx3pfP9b7cVzh4gKQvToA22f2TeN9J1iB9UYJfj8uv0j2M5dujQghc
      rG1C3Z0WpM6NQ/oi/rVszPH74Wxc4eDEcHBiODgxHJwYDk4MByeGgxPDwYnh4MRwcGI4ODEc
      nBgOTgwHJ4aDE8PBieHgxHBwYjg4MRycmCAKboZh72boCish/0ZW5+1yFG3bDJ1uK944dAHN
      0uD2lcXu25oN+3DwXw8hga6gCe4aOlu+0G7EiVIzlrzxJ+jffQsb4q5AX9HkdX/n0Nm/JDpO
      ulNwBHcOnZ012y2W3VgF64p1WBkXCqiiMW/tGiR9eh0mz/2dQ2frMlxDZ1MVBMGfPnR2WxuQ
      mChLqEpBitoKq+S+Pw+dPUjxI0AMN3S2wzER4eHyJSqoVBaYLQA0GHHobJ4RQXHMMFT04MXt
      iV7vu5MmfQ27Xb5EgiSpoXaOoqzJQkFhJuwnC1F6YQlez3C/oFOcEUHZwUcYOnvVNMBksgLO
      y7pUj3pLDJa5/XTw0NluAjSK8zfkMTi+rVrodx4Slx44hOh7LOrL9ohdp+4OrHz2obOFGP/D
      ZwfBi7ZhhGuxLkeDq/u3Qbd5J/7a9kPk/yTB+7aRaVif+RilJUZ0julJKgt/XdgDf12YjSsc
      nBgOTgwHJ4aDE8PBieHgxHBwYjg4MRycGA5ODAcnhoMTw8GJ4eDEcHBiODgxHJwYDk4MByeG
      gxPDwYnh4MRwcGI4ODEcnBgOTgwHJ4aDE8PBieHgxHBwYjg4MRycGA5ODAcnhoMTw8GJ4eDE
      cHBiODgxyh5cF4DVeAJH/n4Nd1u7IanCEDvvJWzakuEaO91YrEOxUbbDzCwUFGZDAzMqi43Q
      5mVDM7DKbNiHD0JysZ3wrAgKD96D1o5YZObvw7fVEQjt7cIdwx+hr0jE3rUJACywtKZhk36j
      +9QYXjinwNDtoBsbUPwlfTKSf/ACFqgjEAoAoRGYq30OU1wD21thDZmBGSM9DE+B4aLw4DJS
      N1obLqPkeCO+lzG/f5n9ER5N1bgu2U/ZkafAkFH4Jb2f8z49efZyvJK3FWnOGQ/a29FuPAad
      DgBCERG/EGs25GK58wbPU2AMFegB20fPITpb7ohL7+0X71V3DF3dZxdf3agQRTvfFzeFEIMD
      5PeJhrJdouh866iOwgPkK0YoItRJWLnxR5AMH8PiuVoVhtgFq5ERb4LJbeXAFBjX9KhspjxF
      XT+FB7+FS+U1uNfe3T+boNSN+5evoGHqVHwLgPkjPY5evYeuXgDoxaPPTsLw5XzMV3s8jGo2
      svNXofloOUzEmyv8Hh6L2EmXcKzwCO519fY/i+etQu6vvo9wAOHpq5FyvAS7j99DV68KYbOe
      x8v5OUjw9lCRaVifWYe3S4x4LU8Lqq/feAoMDzwFBhtXODgxHJwYDk4MByeGgxPDwYnh4MRw
      cGI4ODEcnBgOTgwHJ4aDE8PBieHgxHBwYjg4MRycGA5ODAcnhoMTw8GJ4eDEcHBiODgxHJwY
      Dk4MByeGgxPDwYnh4MRwcGI4ODEcnBgOTgwHJ4aDE8PBieHgxCh8JMaRZ0TovF2Ow4cvoLF7
      IqYvWIMtrnU8I4JXgR7dd3jd4ua/PxI3WjqFQwghHJ3idsUesevU3f7Vtmqh33lIXHrgEKLv
      sagvk61zjabcr+/LM+Ktd86LkcZU5tGUA2r4GRHsxipYV6zDyrhQQBWNeWvXIOnT6zB5PgzP
      iOCi8OAyXmZEaGsDEhNlCVUpSFFbYXUbMZlnRJBT/D0cePqMCA7HRISHy7dUQaWywGwBoAHP
      iOBFUATX5umhRy+6LF+g+uxBlKRuxUZtJCZN+hp2u3xLCZKkhto5XromCwWFmbCfLETphSV4
      PcP9gu5t1GSbzYaoqCi//V8CLXgu6V5mRJg2DTCZrIObSPWot8Qgxu0lOM+IIKfw4MPPiBCu
      XYaYj0/gcksvID3BzfLTaFiYhkTPh+EZEVwUfkkffkYEhGuxLqcJh/dvw4nuiZi++Of4TW6C
      94fiGREA8IwIQ/CMCGxc4eDEcHBiODgxHJwYDk4MByeGgxPDwYnh4MRwcGI4ODEcnBgOTowP
      3w/vwZOHT9Az7DaTET0jGpN9d1D2jHwY/BPsz/wdzg+7zSocqD6AVb47KHtW/vm4u0nof7pF
      nO4YXNJbVSh+cfB/otc/B/QZ/iLCN9KIxsZIRMo+RxSydCniT55ElX8OyEbJT8HnYM6cq/jw
      n63oG1jSU1ODz8PCEOafA7JR8ttn2jqvHsAr2yvQFj0dEaoePHnYjcT8YyjNmeOPw/nMeP9M
      m38/xNjzBDdr/oPGtmmYs3Qx5kUr//U5Bx+1B6g11OLBsNvMxKLMRZjpmwP6xXgP/n/FA1Us
      rfUXpAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='127'>
      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
    </thumbnail>
    <thumbnail height='192' name='Spending Per Child' width='192'>
      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
      8KcLGmStuwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
