<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
        <calculation class='tableau' formula='7151.6706223441297' />
        <range max='19083.970000000001' min='7151.6706223441297' />
      </column>
      <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
        <calculation class='tableau' formula='19083.970000000001' />
        <range max='31016.279999999999' min='19083.970000000001' />
      </column>
      <column caption='KPI High SPC' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='31016.279999999999'>
        <calculation class='tableau' formula='31016.279999999999' />
        <range max='42948.578167415777' min='31016.279999999999' />
      </column>
      <column caption='Above Median Spending' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='12050.0'>
        <calculation class='tableau' formula='12050.0' />
        <range max='42948.578167415777' min='12050.0' />
      </column>
    </datasource>
    <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' inline='true' name='federated.1rxlp9619ie7h91aolobb0xae00x' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='webdata-direct.1qa7sxu1has49g1g01czw11b21e4'>
            <connection APIVersion='' authType='none' authentication='no' channel='http' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;chriscrider/s-17-dv-final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmRpbmciLCJpc3MiOiJhZ2VudDpkaW5nOjowNzc0NDIzMC0wMmEzLTQ1NzctYTQ0MC04MGZmNGViY2EyN2MiLCJpYXQiOjE0OTI0NTk4MzgsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.wdgFKQGqUa926FKYSlsLE1ic3h3y4UffynxUbzo-1tbHWiUEURKv4HK_MPkPuIfTEVJMbVkghZ-2Kf5hSBYpMw&quot;}' connectionName='&quot;chriscrider/s-17-dv-final-project&quot;' filename='' increment-key='' path='/' port='80' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[SchoolSpending].[v_0]' />
              <expression op='[PopulationandElementaryEnrollment].[v_0]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Pupil_Per_Spending].[v_0]' />
                <expression op='[SchoolSpending].[v_0]' />
              </expression>
            </clause>
            <relation connection='webdata-direct.1qa7sxu1has49g1g01czw11b21e4' name='Pupil_Per_Spending' table='[PupilPerSpending]' type='table' />
            <relation connection='webdata-direct.1qa7sxu1has49g1g01czw11b21e4' name='SchoolSpending' table='[SchoolSpending]' type='table' />
          </relation>
          <relation connection='webdata-direct.1qa7sxu1has49g1g01czw11b21e4' name='PopulationandElementaryEnrollment' table='[PopulationandElementaryEnrollment]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (PopulationandElementaryEnrollment)]' value='[PopulationandElementaryEnrollment].[v_0]' />
          <map key='[v_0 (SchoolSpending)]' value='[SchoolSpending].[v_0]' />
          <map key='[v_0]' value='[Pupil_Per_Spending].[v_0]' />
          <map key='[v_1 (PopulationandElementaryEnrollment)]' value='[PopulationandElementaryEnrollment].[v_1]' />
          <map key='[v_1 (SchoolSpending)]' value='[SchoolSpending].[v_1]' />
          <map key='[v_10]' value='[Pupil_Per_Spending].[v_10]' />
          <map key='[v_11]' value='[Pupil_Per_Spending].[v_11]' />
          <map key='[v_1]' value='[Pupil_Per_Spending].[v_1]' />
          <map key='[v_2 (PopulationandElementaryEnrollment)]' value='[PopulationandElementaryEnrollment].[v_2]' />
          <map key='[v_2 (SchoolSpending)]' value='[SchoolSpending].[v_2]' />
          <map key='[v_2]' value='[Pupil_Per_Spending].[v_2]' />
          <map key='[v_3 (SchoolSpending)]' value='[SchoolSpending].[v_3]' />
          <map key='[v_3]' value='[Pupil_Per_Spending].[v_3]' />
          <map key='[v_4 (SchoolSpending)]' value='[SchoolSpending].[v_4]' />
          <map key='[v_4]' value='[Pupil_Per_Spending].[v_4]' />
          <map key='[v_5 (SchoolSpending)]' value='[SchoolSpending].[v_5]' />
          <map key='[v_5]' value='[Pupil_Per_Spending].[v_5]' />
          <map key='[v_6 (SchoolSpending)]' value='[SchoolSpending].[v_6]' />
          <map key='[v_6]' value='[Pupil_Per_Spending].[v_6]' />
          <map key='[v_7 (SchoolSpending)]' value='[SchoolSpending].[v_7]' />
          <map key='[v_7]' value='[Pupil_Per_Spending].[v_7]' />
          <map key='[v_8 (SchoolSpending)]' value='[SchoolSpending].[v_8]' />
          <map key='[v_8]' value='[Pupil_Per_Spending].[v_8]' />
          <map key='[v_9]' value='[Pupil_Per_Spending].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>Geographic area</remote-alias>
            <ordinal>0</ordinal>
            <caption>Geographic area</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2014 PPCS</remote-alias>
            <ordinal>1</ordinal>
            <caption>2014 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(13-14) Percentage change1</remote-alias>
            <ordinal>2</ordinal>
            <caption>(13-14) Percentage change1</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2013 PPCS</remote-alias>
            <ordinal>3</ordinal>
            <caption>2013 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(12-13) Percentage change1</remote-alias>
            <ordinal>4</ordinal>
            <caption>(12-13) Percentage change1</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2012 PPCS</remote-alias>
            <ordinal>5</ordinal>
            <caption>2012 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(11-12) Percentage change1</remote-alias>
            <ordinal>6</ordinal>
            <caption>(11-12) Percentage change1</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2011 PPCS</remote-alias>
            <ordinal>7</ordinal>
            <caption>2011 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(10 -11) Percentage change1</remote-alias>
            <ordinal>8</ordinal>
            <caption>(10 -11) Percentage change1</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2010 PPCS</remote-alias>
            <ordinal>9</ordinal>
            <caption>2010 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>(09-10) Percentage change1</remote-alias>
            <ordinal>10</ordinal>
            <caption>(09-10) Percentage change1</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[Pupil_Per_Spending]</parent-name>
            <remote-alias>2009 PPCS</remote-alias>
            <ordinal>11</ordinal>
            <caption>2009 PPCS</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Geographical Area</remote-alias>
            <ordinal>12</ordinal>
            <caption>Geographical Area</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Total Revenue (in thousands)</remote-alias>
            <ordinal>13</ordinal>
            <caption>Total Revenue (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_2 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>From Federal Sources (in thousands)</remote-alias>
            <ordinal>14</ordinal>
            <caption>From Federal Sources (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>From State Sources (in thousands)</remote-alias>
            <ordinal>15</ordinal>
            <caption>From State Sources (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>From Local Sources (in thousands)</remote-alias>
            <ordinal>16</ordinal>
            <caption>From Local Sources (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Total Spending (in thousands)</remote-alias>
            <ordinal>17</ordinal>
            <caption>Total Spending (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_6 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Current Spending (in thousands)</remote-alias>
            <ordinal>18</ordinal>
            <caption>Current Spending (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Capital Outlay (in thousands)</remote-alias>
            <ordinal>19</ordinal>
            <caption>Capital Outlay (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8 (SchoolSpending)]</local-name>
            <parent-name>[SchoolSpending]</parent-name>
            <remote-alias>Other (in thousands)</remote-alias>
            <ordinal>20</ordinal>
            <caption>Other (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (PopulationandElementaryEnrollment)]</local-name>
            <parent-name>[PopulationandElementaryEnrollment]</parent-name>
            <remote-alias>Geographic area</remote-alias>
            <ordinal>21</ordinal>
            <caption>Geographic area</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1 (PopulationandElementaryEnrollment)]</local-name>
            <parent-name>[PopulationandElementaryEnrollment]</parent-name>
            <remote-alias>State population (in thousands)</remote-alias>
            <ordinal>22</ordinal>
            <caption>State population (in thousands)</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_2 (PopulationandElementaryEnrollment)]</local-name>
            <parent-name>[PopulationandElementaryEnrollment]</parent-name>
            <remote-alias>Elementary-secondary enrollment</remote-alias>
            <ordinal>23</ordinal>
            <caption>Elementary-secondary enrollment</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
      </column>
      <column caption='Enrollment Per State Population' datatype='real' name='[Calculation_350717821900230661]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_2 (PopulationandElementaryEnrollment)]/[v_1 (PopulationandElementaryEnrollment)]' />
      </column>
      <column caption='Above Average Enrollment per State Population' datatype='boolean' name='[Calculation_350717821904838664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_350717821900230661]&gt;0.15087' />
      </column>
      <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
      </column>
      <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
      </column>
      <column caption='Capital Outlay per Child' datatype='real' name='[Calculation_68679894965772290]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_7 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
      </column>
      <column caption='Total Revenue per Child' datatype='real' name='[Calculation_68679894966149123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_1 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
      <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Geographic area' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='State population (in thousands)' datatype='integer' name='[v_1 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
      <column caption='Total Revenue (in thousands)' datatype='integer' name='[v_1 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='(09-10) Percentage change1' datatype='real' name='[v_10]' role='measure' type='quantitative' />
      <column caption='2009 PPCS' datatype='integer' name='[v_11]' role='measure' type='quantitative' />
      <column caption='2014 PPCS' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
      <column caption='From Federal Sources (in thousands)' datatype='integer' name='[v_2 (SchoolSpending)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='(13-14) Percentage change1' datatype='string' default-role='measure' default-type='quantitative' name='[v_2]' role='dimension' type='nominal' />
      <column caption='From State Sources (in thousands)' datatype='integer' name='[v_3 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='2013 PPCS' datatype='integer' name='[v_3]' role='measure' type='quantitative' />
      <column caption='From Local Sources (in thousands)' datatype='integer' name='[v_4 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='(12-13) Percentage change1' datatype='real' name='[v_4]' role='measure' type='quantitative' />
      <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='2012 PPCS' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Current Spending (in thousands)' datatype='integer' name='[v_6 (SchoolSpending)]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='(11-12) Percentage change1' datatype='string' default-role='measure' default-type='quantitative' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Capital Outlay (in thousands)' datatype='integer' name='[v_7 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='2011 PPCS' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='Other (in thousands)' datatype='integer' name='[v_8 (SchoolSpending)]' role='measure' type='quantitative' />
      <column caption='(10 -11) Percentage change1' datatype='real' name='[v_8]' role='measure' type='quantitative' />
      <column caption='2010 PPCS' datatype='integer' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='Attribute' name='[attr:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_350717821904838664]' derivation='None' name='[none:Calculation_350717821904838664:nk]' pivot='key' type='nominal' />
      <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_68679894966149123]' derivation='Sum' name='[sum:Calculation_68679894966149123:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1 (PopulationandElementaryEnrollment)]' derivation='Sum' name='[sum:v_1 (PopulationandElementaryEnrollment):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1 (SchoolSpending)]' derivation='Sum' name='[sum:v_1 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1]' derivation='Sum' name='[sum:v_1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_3]' derivation='Sum' name='[sum:v_3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_5 (SchoolSpending)]' derivation='Sum' name='[sum:v_5 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_6 (SchoolSpending)]' derivation='Sum' name='[sum:v_6 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7 (SchoolSpending)]' derivation='Sum' name='[sum:v_7 (SchoolSpending):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7]' derivation='Sum' name='[sum:v_7:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\dingk\Documents\My Tableau Repository\Datasources\federated.1rxlp9619ie7h91aolobb0xae00x_1ig5cqs0k7wfjx17p90wj0qcwmg5.tde' schema='Extract' tablename='Extract' update-time='04/28/2017 02:54:30 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_433189989801832448]' value='[Extract].[Calculation_433189989801832448]' />
            <map key='[v_0 (PopulationandElementaryEnrollment)]' value='[Extract].[v_0]' />
            <map key='[v_0 (SchoolSpending)]' value='[Extract].[v_01]' />
            <map key='[v_0]' value='[Extract].[v_02]' />
            <map key='[v_1 (PopulationandElementaryEnrollment)]' value='[Extract].[v_1]' />
            <map key='[v_1 (SchoolSpending)]' value='[Extract].[v_11]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_111]' />
            <map key='[v_1]' value='[Extract].[v_12]' />
            <map key='[v_2 (PopulationandElementaryEnrollment)]' value='[Extract].[v_2]' />
            <map key='[v_2 (SchoolSpending)]' value='[Extract].[v_21]' />
            <map key='[v_2]' value='[Extract].[v_22]' />
            <map key='[v_3 (SchoolSpending)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (SchoolSpending)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5 (SchoolSpending)]' value='[Extract].[v_5]' />
            <map key='[v_5]' value='[Extract].[v_51]' />
            <map key='[v_6 (SchoolSpending)]' value='[Extract].[v_6]' />
            <map key='[v_6]' value='[Extract].[v_61]' />
            <map key='[v_7 (SchoolSpending)]' value='[Extract].[v_7]' />
            <map key='[v_7]' value='[Extract].[v_71]' />
            <map key='[v_8 (SchoolSpending)]' value='[Extract].[v_8]' />
            <map key='[v_8]' value='[Extract].[v_81]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_433189989801832448]' formula='' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='52' timestamp-start='2017-04-28 02:54:30.060' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (PopulationandElementaryEnrollment)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>PopulationandElementaryEnrollment</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>SchoolSpending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_02</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_02</remote-alias>
              <ordinal>2</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_1 (PopulationandElementaryEnrollment)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>3</ordinal>
              <family>PopulationandElementaryEnrollment</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>637713000.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12263711.538461538</statistic>
                <statistic aggregation='Min' datatype='integer'>584000</statistic>
                <statistic aggregation='Max' datatype='integer'>318857000</statistic>
                <statistic aggregation='Stdev' datatype='real'>43920640.145133302</statistic>
                <statistic aggregation='StdevP' datatype='real'>43496276.182050936</statistic>
                <statistic aggregation='Var' datatype='real'>1929022630758295.2</statistic>
                <statistic aggregation='VarP' datatype='real'>1891926041705251.3</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.06200882445e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_1 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1235267546.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23755145.115384616</statistic>
                <statistic aggregation='Min' datatype='integer'>1342220</statistic>
                <statistic aggregation='Max' datatype='integer'>617633773</statistic>
                <statistic aggregation='Stdev' datatype='real'>85200486.714524791</statistic>
                <statistic aggregation='StdevP' datatype='real'>84377274.300515175</statistic>
                <statistic aggregation='Var' datatype='real'>7259122936391916.0</statistic>
                <statistic aggregation='VarP' datatype='real'>7119524418384379.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.9955922956754272e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>5</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>76.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.4615384615384615</statistic>
                <statistic aggregation='Min' datatype='real'>-5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>13.800000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.6880917987678621</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.652457225893583</statistic>
                <statistic aggregation='Var' datatype='real'>13.602021116138763</statistic>
                <statistic aggregation='VarP' datatype='real'>13.340443786982247</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>804.77999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_111</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_111</remote-alias>
              <ordinal>6</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>558876.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10747.615384615385</statistic>
                <statistic aggregation='Min' datatype='integer'>6356</statistic>
                <statistic aggregation='Max' datatype='integer'>18126</statistic>
                <statistic aggregation='Stdev' datatype='real'>2612.2993789473803</statistic>
                <statistic aggregation='StdevP' datatype='real'>2587.0591794979973</statistic>
                <statistic aggregation='Var' datatype='real'>6824108.0452488689</statistic>
                <statistic aggregation='VarP' datatype='real'>6692875.1982248519</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6354613806.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>7</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>598427.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11508.211538461539</statistic>
                <statistic aggregation='Min' datatype='integer'>6500</statistic>
                <statistic aggregation='Max' datatype='integer'>20610</statistic>
                <statistic aggregation='Stdev' datatype='real'>3292.7646250442326</statistic>
                <statistic aggregation='StdevP' datatype='real'>3260.9497279670536</statistic>
                <statistic aggregation='Var' datatype='real'>10842298.875942685</statistic>
                <statistic aggregation='VarP' datatype='real'>10633793.128328402</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7439781749.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_2 (PopulationandElementaryEnrollment)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>8</ordinal>
              <family>PopulationandElementaryEnrollment</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>96698502.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1859586.576923077</statistic>
                <statistic aggregation='Min' datatype='integer'>44942</statistic>
                <statistic aggregation='Max' datatype='integer'>48349251</statistic>
                <statistic aggregation='Stdev' datatype='real'>6669343.2085468462</statistic>
                <statistic aggregation='StdevP' datatype='real'>6604903.5987009257</statistic>
                <statistic aggregation='Var' datatype='real'>44480138833389.937</statistic>
                <statistic aggregation='VarP' datatype='real'>43624751548132.437</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2448306316830656.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_2 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>9</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>105764166.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2033926.2692307692</statistic>
                <statistic aggregation='Min' datatype='integer'>102434</statistic>
                <statistic aggregation='Max' datatype='integer'>52882083</statistic>
                <statistic aggregation='Stdev' datatype='real'>7310711.3337628553</statistic>
                <statistic aggregation='StdevP' datatype='real'>7240074.785108394</statistic>
                <statistic aggregation='Var' datatype='real'>53446500205608.672</statistic>
                <statistic aggregation='VarP' datatype='real'>52418682893962.352</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2940888026056726.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>10</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-0.2&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;8.0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>11</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>577168890.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11099401.73076923</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>288584445</statistic>
                <statistic aggregation='Stdev' datatype='real'>39787451.58982753</statistic>
                <statistic aggregation='StdevP' datatype='real'>39403022.752228312</statistic>
                <statistic aggregation='Var' datatype='real'>1583041304012869.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1552598202012622.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>87141335881268496.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>12</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>584516.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11240.692307692309</statistic>
                <statistic aggregation='Min' datatype='integer'>6555</statistic>
                <statistic aggregation='Max' datatype='integer'>19818</statistic>
                <statistic aggregation='Stdev' datatype='real'>3249.4439496474552</statistic>
                <statistic aggregation='StdevP' datatype='real'>3218.0476196365585</statistic>
                <statistic aggregation='Var' datatype='real'>10558885.981900452</statistic>
                <statistic aggregation='VarP' datatype='real'>10355830.48224852</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7108867690.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>13</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>552334490.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10621817.115384616</statistic>
                <statistic aggregation='Min' datatype='integer'>55076</statistic>
                <statistic aggregation='Max' datatype='integer'>276167245</statistic>
                <statistic aggregation='Stdev' datatype='real'>38188455.429912172</statistic>
                <statistic aggregation='StdevP' datatype='real'>37819476.192891017</statistic>
                <statistic aggregation='Var' datatype='real'>1458358128122388.5</statistic>
                <statistic aggregation='VarP' datatype='real'>1430312779504650.2</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>80243060473541040.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>14</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>63.999999999999986</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2307692307692304</statistic>
                <statistic aggregation='Min' datatype='real'>-7.7999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>9.1999999999999993</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.5740437753593204</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.549173203936649</statistic>
                <statistic aggregation='Var' datatype='real'>6.6257013574660633</statistic>
                <statistic aggregation='VarP' datatype='real'>6.4982840236686394</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>416.67999999999995</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>15</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1227275916.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23601459.923076924</statistic>
                <statistic aggregation='Min' datatype='integer'>1313289</statistic>
                <statistic aggregation='Max' datatype='integer'>613637958</statistic>
                <statistic aggregation='Stdev' datatype='real'>84668569.991881862</statistic>
                <statistic aggregation='StdevP' datatype='real'>83850496.990405947</statistic>
                <statistic aggregation='Var' datatype='real'>7168766744470197.0</statistic>
                <statistic aggregation='VarP' datatype='real'>7030905845538078.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.9457260731401158e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_51</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_51</remote-alias>
              <ordinal>16</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>576408.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11084.76923076923</statistic>
                <statistic aggregation='Min' datatype='integer'>6206</statistic>
                <statistic aggregation='Max' datatype='integer'>19552</statistic>
                <statistic aggregation='Stdev' datatype='real'>3077.815080733661</statistic>
                <statistic aggregation='StdevP' datatype='real'>3048.0770395535042</statistic>
                <statistic aggregation='Var' datatype='real'>9472945.6711915527</statistic>
                <statistic aggregation='VarP' datatype='real'>9290773.6390532553</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6872469892.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_6 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>17</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1093335528.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21025683.230769232</statistic>
                <statistic aggregation='Min' datatype='integer'>913724</statistic>
                <statistic aggregation='Max' datatype='integer'>546667764</statistic>
                <statistic aggregation='Stdev' datatype='real'>75407646.013936505</statistic>
                <statistic aggregation='StdevP' datatype='real'>74679052.637258843</statistic>
                <statistic aggregation='Var' datatype='real'>5686313077363154.0</statistic>
                <statistic aggregation='VarP' datatype='real'>5576960902798478.0</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3.1299009342219469e+17</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_61</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_61</remote-alias>
              <ordinal>18</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-0.1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9.3&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;0.4&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_7 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>19</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95116218.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1829158.0384615385</statistic>
                <statistic aggregation='Min' datatype='integer'>37897</statistic>
                <statistic aggregation='Max' datatype='integer'>47558109</statistic>
                <statistic aggregation='Stdev' datatype='real'>6578185.1668376215</statistic>
                <statistic aggregation='StdevP' datatype='real'>6514626.3316734629</statistic>
                <statistic aggregation='Var' datatype='real'>43272520089202.508</statistic>
                <statistic aggregation='VarP' datatype='real'>42440356241333.234</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2380881119292088.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_71</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_71</remote-alias>
              <ordinal>20</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>573483.0</statistic>
                <statistic aggregation='Avg' datatype='real'>11028.51923076923</statistic>
                <statistic aggregation='Min' datatype='integer'>6212</statistic>
                <statistic aggregation='Max' datatype='integer'>19076</statistic>
                <statistic aggregation='Stdev' datatype='real'>2953.3742981073301</statistic>
                <statistic aggregation='StdevP' datatype='real'>2924.8386115265116</statistic>
                <statistic aggregation='Var' datatype='real'>8722419.7447209656</statistic>
                <statistic aggregation='VarP' datatype='real'>8554680.9034763314</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6769511701.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8 (SchoolSpending)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>21</ordinal>
              <family>SchoolSpending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38824170.0</statistic>
                <statistic aggregation='Avg' datatype='real'>746618.65384615387</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>19412085</statistic>
                <statistic aggregation='Stdev' datatype='real'>2729074.5032866383</statistic>
                <statistic aggregation='StdevP' datatype='real'>2702706.0153061617</statistic>
                <statistic aggregation='Var' datatype='real'>7447847644489.2109</statistic>
                <statistic aggregation='VarP' datatype='real'>7304619805172.1113</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>408827079411044.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_81</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_81</remote-alias>
              <ordinal>22</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>33.899999999999999</statistic>
                <statistic aggregation='Avg' datatype='real'>0.65192307692307694</statistic>
                <statistic aggregation='Min' datatype='real'>-5.2000000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>6.7999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.6729942368148207</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.6471675998650226</statistic>
                <statistic aggregation='Var' datatype='real'>7.1448981900452466</statistic>
                <statistic aggregation='VarP' datatype='real'>7.007496301775145</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>386.48999999999984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>23</ordinal>
              <family>Pupil_Per_Spending</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>568255.0</statistic>
                <statistic aggregation='Avg' datatype='real'>10927.98076923077</statistic>
                <statistic aggregation='Min' datatype='integer'>6064</statistic>
                <statistic aggregation='Max' datatype='integer'>18667</statistic>
                <statistic aggregation='Stdev' datatype='real'>2803.5259276621478</statistic>
                <statistic aggregation='StdevP' datatype='real'>2776.4380853780749</statistic>
                <statistic aggregation='Var' datatype='real'>7859757.6270739064</statistic>
                <statistic aggregation='VarP' datatype='real'>7708608.4419378694</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6610727351.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_433189989801832448</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Calculation_433189989801832448]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_433189989801832448</remote-alias>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
                <statistic aggregation='Count' datatype='integer'>52</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.43956' measure-ordering='alphabetic' measure-percentage='0.375824' parameter-percentage='0.184615' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_7 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_1 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[attr:v_0 (PopulationandElementaryEnrollment):nk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_7:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894966149123:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_1 (PopulationandElementaryEnrollment):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_6 (SchoolSpending):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894966149123:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_1:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_3:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:v_0:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_350717821904838664:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
          <calculation class='tableau' formula='7151.6706223441297' />
          <range max='19083.970000000001' min='7151.6706223441297' />
        </column>
        <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
          <calculation class='tableau' formula='19083.970000000001' />
          <range max='31016.279999999999' min='19083.970000000001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Boxplot Revenue Per Child'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Total Revenue per Child' datatype='real' name='[Calculation_68679894966149123]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_1 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='None' name='[none:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_68679894966149123]' derivation='Sum' name='[sum:Calculation_68679894966149123:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
            <column caption='Geographic area' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='Total Revenue (in thousands)' datatype='integer' name='[v_1 (SchoolSpending)]' role='measure' type='quantitative' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894966149123:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0:nk]' />
              <groupfilter function='member' level='[none:v_0:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</column>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='11'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]' />
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' />
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='CrossTab Above Median Spending'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Spending Per Child 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Enrollment Per State Population' datatype='real' name='[Calculation_350717821900230661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_2 (PopulationandElementaryEnrollment)]/[v_1 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Average Enrollment per State Population' datatype='boolean' name='[Calculation_350717821904838664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_350717821900230661]&gt;0.15087' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_350717821904838664]' derivation='None' name='[none:Calculation_350717821904838664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State population (in thousands)' datatype='integer' name='[v_1 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' direction='ASC' using='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]'>
            <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;Alabama&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (SchoolSpending):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;District of Columbia&quot;' />
                <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;United States&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821904838664:nk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map Sets and Parameters'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Enrollment Per State Population' datatype='real' name='[Calculation_350717821900230661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_2 (PopulationandElementaryEnrollment)]/[v_1 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Average Enrollment per State Population' datatype='boolean' name='[Calculation_350717821904838664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_350717821900230661]&gt;0.15087' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column-instance column='[Calculation_350717821904838664]' derivation='None' name='[none:Calculation_350717821904838664:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State population (in thousands)' datatype='integer' name='[v_1 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Texas&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]' field-type='quantitative' max='-7196885.8481834745' min='-13968135.908739274' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]' field-type='quantitative' max='6706802.3028693926' min='2865717.0585594' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' field-type='quantitative' max-size='1' min-size='0.0111322' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821904838664:nk]' />
              <size column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.8982962965965271' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Median Spending Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Delaware&quot;' />
              <groupfilter from='&quot;Florida&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Texas&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:v_0 (SchoolSpending):nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]' field-type='quantitative' max='-7196885.8481834745' min='-13968135.908739274' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]' field-type='quantitative' max='6706802.3028693926' min='2865717.0585594' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' field-type='quantitative' max-size='1' min-size='0.0111322' type='rangesize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' />
              <size column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.8982962965965271' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[Latitude (generated)]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Parameters, Hierarchy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (SchoolSpending):nk]' />
              <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' />
              <text column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Low SPC' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='7151.6706223441297'>
              <calculation class='tableau' formula='7151.6706223441297' />
              <range max='19083.970000000001' min='7151.6706223441297' />
            </column>
            <column caption='KPI Medium SPC' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='19083.970000000001'>
              <calculation class='tableau' formula='19083.970000000001' />
              <range max='31016.279999999999' min='19083.970000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child to KPR' datatype='string' name='[Calculation_350717821844422656]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [Calculation_68679894964350976] &lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column caption='Enrollment Per State Population' datatype='real' name='[Calculation_350717821900230661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_2 (PopulationandElementaryEnrollment)]/[v_1 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column-instance column='[Calculation_350717821844422656]' derivation='None' name='[none:Calculation_350717821844422656:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='None' name='[none:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_350717821900230661]' derivation='Sum' name='[sum:Calculation_350717821900230661:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
            <column caption='Geographic area' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='State population (in thousands)' datatype='integer' name='[v_1 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]'>
            <groupfilter from='&quot;High&quot;' function='range' level='[none:Calculation_350717821844422656:nk]' to='&quot;Medium&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (PopulationandElementaryEnrollment):nk]' />
              <groupfilter function='member' level='[none:v_0 (PopulationandElementaryEnrollment):nk]' member='&quot;District of Columbia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Alabama&quot;' function='range' level='[none:v_0:nk]' to='&quot;Texas&quot;' />
              <groupfilter from='&quot;Utah&quot;' function='range' level='[none:v_0:nk]' to='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</column>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</column>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_gray60' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_350717821900230661:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_350717821900230661:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_350717821900230661:qk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column-instance column='[v_0 (PopulationandElementaryEnrollment)]' derivation='None' name='[none:v_0 (PopulationandElementaryEnrollment):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5 (SchoolSpending)]' derivation='Sum' name='[sum:v_5 (SchoolSpending):qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (PopulationandElementaryEnrollment)]' role='dimension' type='nominal' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (PopulationandElementaryEnrollment):nk]' />
              <groupfilter function='member' level='[none:v_0 (PopulationandElementaryEnrollment):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Spending Per Child'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Current Spending Per Pupil 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;chriscrider/s-17-dv-final-project&quot;' name='federated.1rxlp9619ie7h91aolobb0xae00x' />
          </datasources>
          <datasource-dependencies datasource='federated.1rxlp9619ie7h91aolobb0xae00x'>
            <column caption='Spending Per Child' datatype='real' name='[Calculation_68679894964350976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_5 (SchoolSpending)]*1000/[v_2 (PopulationandElementaryEnrollment)]' />
            </column>
            <column caption='Above Median Spending per Child' datatype='boolean' name='[Calculation_68679894964551681]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_68679894964350976]&gt;12050' />
            </column>
            <column-instance column='[Calculation_68679894964551681]' derivation='None' name='[none:Calculation_68679894964551681:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (SchoolSpending)]' derivation='None' name='[none:v_0 (SchoolSpending):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_68679894964350976]' derivation='Sum' name='[sum:Calculation_68679894964350976:qk]' pivot='key' type='quantitative' />
            <column caption='Geographical Area' datatype='string' name='[v_0 (SchoolSpending)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Elementary-secondary enrollment' datatype='integer' name='[v_2 (PopulationandElementaryEnrollment)]' role='measure' type='quantitative' />
            <column caption='Total Spending (in thousands)' datatype='integer' name='[v_5 (SchoolSpending)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:v_0 (SchoolSpending):nk]' />
              <groupfilter function='member' level='[none:v_0 (SchoolSpending):nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]</rows>
        <cols>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='100000' id='1' name='Sheet 6' w='42000' x='0' y='0' />
              <zone h='100000' id='3' name='Boxplot Revenue Per Child' w='42000' x='42000' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='5' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='3250' id='7' name='Boxplot Revenue Per Child' pane-specification-id='8' type='color' w='16000' x='84000' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Spending Per Child'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='CrossTab Above Median Spending'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821904838664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821904838664:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Parameters, Hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Sets and Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821904838664:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[attr:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821904838664:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Median Spending Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:Calculation_68679894964350976:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[attr:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_433189989801832448:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (SchoolSpending):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_4 (SchoolSpending):qk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_5 (SchoolSpending):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot Revenue Per Child'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]&#10;[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[:Measure Names]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_350717821844422656:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:Calculation_68679894964551681:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0 (PopulationandElementaryEnrollment):nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[none:v_0:nk]</field>
            <field>[federated.1rxlp9619ie7h91aolobb0xae00x].[sum:v_3:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Boxplot Revenue Per Child'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot Revenue Per Child' width='124'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CrossTab Above Median Spending' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Sets and Parameters' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Median Spending Map' width='192'>
      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
      bhT5/wF3B3v8J3VGdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Parameters, Hierarchy' width='192'>
      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
      C+gQx+637mkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='127'>
      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
    </thumbnail>
    <thumbnail height='192' name='Spending Per Child' width='192'>
      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
      E4hMAnwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
